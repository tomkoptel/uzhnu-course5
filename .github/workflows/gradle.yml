name: Build Latex Paper

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_rn:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'rn') || github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Store Gradle Binnary
      uses: actions/cache@v1
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Store Gradle Caches
      uses: actions/cache@v1.1.2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Install Dependencies
      run: (cd BreedRN && npm ci)
    - name: Build app
      run: (cd BreedRN/android && ./gradlew :app:assembleRelease)
    - name: Upload APK
      uses: actions/upload-artifact@v1
      with:
        name: rn-app
        path: BreedRN/android/app/build/outputs/apk/release/app-release.apk
  build_kmm:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'kmm') || github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x ./BreedKN/gradlew
    - name: Store Gradle Binnary
      uses: actions/cache@v1
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Store Gradle Caches
      uses: actions/cache@v1.1.2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Build Debug APK
      run: (cd ./BreedKN && ./gradlew :app:assembleDebug)
    - name: Upload Debug APK
      uses: actions/upload-artifact@v1
      with:
        name: kmm-app
        path: BreedKN/app/build/outputs/apk/debug/app-debug.apk
  build_dyplom_paper:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    container: aergus/latex
    steps:
    - uses: actions/checkout@v2
    - name: Build paper
      run: (cd papers/dyplom && ./build.sh)
    - name: Upload Paper
      uses: actions/upload-artifact@v1
      with:
        name: paper
        path: papers/dyplom/dyplom.pdf
  build_flutter:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'flutter') || github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x ./BreedKN/gradlew
    - name: Store Gradle Binnary
      uses: actions/cache@v1
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Store Gradle Caches
      uses: actions/cache@v1.1.2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    - name: Install Dependencies
      run: (cd breed_flutter && flutter pub get)
    - name: Build Release APK
      run: (cd breed_flutter && flutter build apk --release)
    - name: Upload Release APK
      uses: actions/upload-artifact@v1
      with:
        name: flutter-app
        path: breed_flutter/build/app/outputs/flutter-apk/app-release.apk

